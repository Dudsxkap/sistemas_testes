# Generated by Django 3.2.3 on 2024-01-06 18:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.br.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('cpf', localflavor.br.models.BRCPFField(max_length=14, unique=True, verbose_name='CPF')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Administrador')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='EstabelecimentoSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('cnes', models.CharField(max_length=200, verbose_name='CNES')),
            ],
            options={
                'verbose_name': 'Estabelecimento de Saúde',
                'verbose_name_plural': 'Estabelecimentos de Saúde',
            },
        ),
        migrations.CreateModel(
            name='GrupoAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('codigo_si_pni', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Grupo de Atendimento',
                'verbose_name_plural': 'Grupos de Atendimento',
            },
        ),
        migrations.CreateModel(
            name='Cidadao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('teve_covid', models.BooleanField(verbose_name='Teve COVID-19 nos últimos 30 dias?')),
                ('apto_agendamento', models.BooleanField(verbose_name='Está apto para agendamento?')),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cidadao', to=settings.AUTH_USER_MODEL)),
                ('grupos_atendimento', models.ManyToManyField(to='agendamentos.GrupoAtendimento', verbose_name='Grupos de atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='AgendamentoDisponivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('horario', models.TimeField(verbose_name='Horário')),
                ('num_vagas', models.IntegerField(verbose_name='Número de vagas')),
                ('estabelecimento_saude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamento_disponivel', to='agendamentos.estabelecimentosaude', verbose_name='Estabelecimento de Saúde')),
            ],
            options={
                'verbose_name': 'Agendamentos Disponíveis',
                'verbose_name_plural': 'Agendamentos Disponíveis',
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agendamento_disponivel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agendamentos.agendamentodisponivel', verbose_name='Agendamento')),
                ('cidadao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='agendamentos.cidadao', verbose_name='Cidadão')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
            },
        ),
    ]
